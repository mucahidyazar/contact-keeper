{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mucahid Yazar\\\\OneDrive\\\\Desktop\\\\some-projects\\\\contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts,\n    loading\n  } = contactContext;\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, filtered !== null ? filtered.map(contact => React.createElement(ContactItem, {\n    contact: contact,\n    key: contact._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })) : contacts.map(contact => React.createElement(ContactItem, {\n    contact: contact,\n    key: contact._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["C:/Users/Mucahid Yazar/OneDrive/Desktop/some-projects/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","ContactItem","ContactContext","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGN,UAAU,CAACG,cAAD,CAAjC;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA;AAAnC,MAA+CJ,cAArD;;AAEA,MAAIC,QAAQ,CAACI,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAClB,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAtB;AAA+B,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAIGP,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAClB,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAtB;AAA+B,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALN,CADF;AAWD,CAnBD;;AAqBA,eAAeT,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { contacts, filtered, getContacts, loading } = contactContext;\r\n\r\n  if (contacts.length === 0) {\r\n    return <h4>Please add a contact</h4>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {filtered !== null\r\n        ? filtered.map(contact => (\r\n            <ContactItem contact={contact} key={contact._id} />\r\n          ))\r\n        : contacts.map(contact => (\r\n            <ContactItem contact={contact} key={contact._id} />\r\n          ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}