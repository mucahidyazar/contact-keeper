{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mucahid Yazar\\\\OneDrive\\\\Desktop\\\\some-projects\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport uuid from \"uuid\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, CLEAR_CONTACTS, CONTACT_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS\n      });\n    } catch (err) {\n      console.log(err.response);\n    }\n  }; // Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      header: {\n        \"Content-type\": \"applciation/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      loading: state.loading,\n      getContacts,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/Mucahid Yazar/OneDrive/Desktop/some-projects/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","uuid","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","CLEAR_CONTACTS","CONTACT_ERROR","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","err","console","log","response","addContact","contact","config","header","post","payload","data","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","loading","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport uuid from \"uuid\";\r\nimport ContactContext from \"./contactContext\";\r\nimport contactReducer from \"./contactReducer\";\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  CLEAR_CONTACTS,\r\n  CONTACT_ERROR,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER\r\n} from \"../types\";\r\n\r\nconst ContactState = props => {\r\n  const initialState = {\r\n    contacts: [],\r\n    current: null,\r\n    filtered: null,\r\n    error: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  // Get Contacts\r\n  const getContacts = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/contacts\");\r\n      dispatch({ type: GET_CONTACTS });\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n\r\n  // Add Contact\r\n  const addContact = async contact => {\r\n    const config = {\r\n      header: {\r\n        \"Content-type\": \"applciation/json\"\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/api/contacts\", contact, config);\r\n      dispatch({ type: ADD_CONTACT, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n  // Delete Contact\r\n  const deleteContact = id => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n\r\n  // Set Current Contact\r\n  const setCurrent = contact => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  // Clear Current Contact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // Update Contact\r\n  const updateContact = contact => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n\r\n  // Filter Contacts\r\n  const filterContacts = text => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n\r\n  // Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getContacts,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}